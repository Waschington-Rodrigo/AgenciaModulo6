// <auto-generated />
using System;
using AgenciaApiCS.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenciaApiCS.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20240119154915_sextou")]
    partial class sextou
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AgenciaApiCS.Models.Destino", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cidade");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado");

                    b.Property<string>("LocalDestino")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("localDestino");

                    b.Property<decimal?>("Valor")
                        .IsRequired()
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.ToTable("Destino");
                });

            modelBuilder.Entity("AgenciaApiCS.Models.Hospedagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cidade");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("endereco");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefone");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.Property<decimal?>("ValorDiaria")
                        .IsRequired()
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valorDiaria");

                    b.HasKey("Id");

                    b.ToTable("Hospedagem");
                });

            modelBuilder.Entity("AgenciaApiCS.Models.Passagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataViagem")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dataViagem");

                    b.Property<long>("Destino_id_fk")
                        .HasColumnType("bigint")
                        .HasColumnName("destino_id_fk");

                    b.Property<int>("PacotePromo")
                        .HasColumnType("int")
                        .HasColumnName("pacotePromo");

                    b.Property<long>("Usuario_id_fk")
                        .HasColumnType("bigint")
                        .HasColumnName("usuario_id_fk");

                    b.Property<decimal?>("ValorTotal")
                        .IsRequired()
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valorTotal");

                    b.HasKey("Id");

                    b.HasIndex("Destino_id_fk");

                    b.HasIndex("Usuario_id_fk");

                    b.ToTable("Passagem");
                });

            modelBuilder.Entity("AgenciaApiCS.Models.Reserva", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dataReserva");

                    b.Property<long>("Hospedagem_id_fk")
                        .HasColumnType("bigint")
                        .HasColumnName("hospedagem_id_fk");

                    b.Property<int>("PacotePromo")
                        .HasColumnType("int")
                        .HasColumnName("pacotePromo");

                    b.Property<int>("QtdDias")
                        .HasColumnType("int")
                        .HasColumnName("qtdDias");

                    b.Property<long>("Usuario_id_fk")
                        .HasColumnType("bigint")
                        .HasColumnName("usuario_id_fk");

                    b.Property<decimal?>("ValorTotal")
                        .IsRequired()
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valorTotal");

                    b.HasKey("Id");

                    b.HasIndex("Hospedagem_id_fk");

                    b.HasIndex("Usuario_id_fk");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("AgenciaApiCS.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cidade");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("endereco");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AgenciaApiCS.Models.Passagem", b =>
                {
                    b.HasOne("AgenciaApiCS.Models.Destino", "Destino")
                        .WithMany("Passagens")
                        .HasForeignKey("Destino_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgenciaApiCS.Usuario", "Usuario")
                        .WithMany("Passagens")
                        .HasForeignKey("Usuario_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AgenciaApiCS.Models.Reserva", b =>
                {
                    b.HasOne("AgenciaApiCS.Models.Hospedagem", "Hospedagem")
                        .WithMany("Reservas")
                        .HasForeignKey("Hospedagem_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgenciaApiCS.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("Usuario_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hospedagem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AgenciaApiCS.Models.Destino", b =>
                {
                    b.Navigation("Passagens");
                });

            modelBuilder.Entity("AgenciaApiCS.Models.Hospedagem", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AgenciaApiCS.Usuario", b =>
                {
                    b.Navigation("Passagens");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
